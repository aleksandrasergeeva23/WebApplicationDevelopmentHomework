{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.json.stringify.js\";\n// @ is an alias to /src\nimport auth from \"../auth\";\nexport default {\n  name: \"HomeView\",\n  components: {},\n  data: function data() {\n    return {\n      posts: [],\n      authResult: auth.authenticated()\n    };\n  },\n  methods: {\n    Logout: function Logout() {\n      var _this = this;\n      fetch(\"http://localhost:3000/auth/logout\", {\n        credentials: 'include' //  Don't forget to specify this if you need cookies\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        console.log(data);\n        console.log('jwt removed');\n        //console.log('jwt removed:' + auth.authenticated());\n        _this.$router.push(\"/login\");\n        //location.assign(\"/\");\n      })[\"catch\"](function (e) {\n        console.log(e);\n        console.log(\"error logout\");\n      });\n    },\n    AddPost: function AddPost() {\n      var _this2 = this;\n      var data = {\n        body1: this.body1\n      };\n      // using Fetch - post method - send an HTTP post request to the specified URI with the defined body \n      fetch(\"http://localhost:3000/#/addpost\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: 'include',\n        //  Don't forget to specify this if you need cookies \n        body: JSON.stringify(data)\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        console.log(data);\n        _this2.$router.push(\"/\");\n        //location.assign(\"/\"); \n      })[\"catch\"](function (e) {\n        console.log(e);\n        console.log(\"error\");\n      });\n    }\n  },\n  mounted: function mounted() {\n    var _this3 = this;\n    fetch('https://jsonplaceholder.typicode.com/posts').then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      return _this3.posts = data;\n    })[\"catch\"](function (err) {\n      return console.log(err.message);\n    });\n  }\n};","map":{"version":3,"mappings":";;;AAqBA;AACA,OAAOA,IAAG,MAAO,SAAS;AAE1B,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,UAAU,EAAE,CACZ,CAAC;EACAC,IAAI,EAAE,gBAAW;IAChB,OAAO;MACPC,KAAK,EAAC,EAAG;MACTC,UAAU,EAAEL,IAAI,CAACM,aAAa;IAC9B;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,MAAM,oBAAG;MAAA;MACPC,KAAK,CAAC,mCAAmC,EAAE;QACvCC,WAAW,EAAE,SAAS,CAAE;MAC5B,CAAC,EACAC,IAAI,CAAC,UAACC,QAAQ;QAAA,OAAKA,QAAQ,CAACC,IAAI,EAAE;MAAA,GAClCF,IAAI,CAAC,UAACR,IAAI,EAAK;QACdW,OAAO,CAACC,GAAG,CAACZ,IAAI,CAAC;QACjBW,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;QAC1B;QACA,KAAI,CAACC,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;QAC3B;MACF,CAAC,UACK,CAAC,UAACC,CAAC,EAAK;QACZJ,OAAO,CAACC,GAAG,CAACG,CAAC,CAAC;QACdJ,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MAC7B,CAAC,CAAC;IACJ,CAAC;IAEDI,OAAO,qBAAG;MAAA;MACN,IAAIhB,IAAG,GAAI;QACTiB,KAAK,EAAE,IAAI,CAACA;MACd,CAAC;MACD;MACAX,KAAK,CAAC,iCAAiC,EAAE;QACvCY,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACCZ,WAAW,EAAE,SAAS;QAAE;QACxBa,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACtB,IAAI;MAC7B,CAAC,EACAQ,IAAI,CAAC,UAACC,QAAQ;QAAA,OAAKA,QAAQ,CAACC,IAAI,EAAE;MAAA,GAClCF,IAAI,CAAC,UAACR,IAAI,EAAK;QAChBW,OAAO,CAACC,GAAG,CAACZ,IAAI,CAAC;QACjB,MAAI,CAACa,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;QACtB;MACA,CAAC,UACK,CAAC,UAACC,CAAC,EAAK;QACZJ,OAAO,CAACC,GAAG,CAACG,CAAC,CAAC;QACdJ,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;MACtB,CAAC,CAAC;IACJ;EACJ,CAAC;EACDW,OAAO,qBAAG;IAAA;IACJjB,KAAK,CAAC,4CAA4C,EACjDE,IAAI,CAAC,UAACC,QAAQ;MAAA,OAAKA,QAAQ,CAACC,IAAI,EAAE;IAAA,GAClCF,IAAI,CAAC,cAAG;MAAA,OAAK,MAAI,CAACP,KAAI,GAAID,IAAI;IAAA,WACzB,CAAC,aAAE;MAAA,OAAKW,OAAO,CAACC,GAAG,CAACY,GAAG,CAACC,OAAO,CAAC;IAAA;EAC1C;AACJ,CAAC","names":["auth","name","components","data","posts","authResult","authenticated","methods","Logout","fetch","credentials","then","response","json","console","log","$router","push","e","AddPost","body1","method","headers","body","JSON","stringify","mounted","err","message"],"sourceRoot":"","sources":["/Users/beatasillat/Desktop/wad/WebApplicationDevelopmentHomework/HW4/HW4-Frontend/src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div class=\"header\">\n        <button v-if = \"authResult\" @click=\"Logout\" class=\"center\">Logout</button>\n\n    <div class=\"container\">\n    </div>\n    <div class=\"post-list\" v-for=\"post in posts\"   :key=\"post.index\">  \n      <div class=\"post\">\n          <h3>  Title:  {{post.title}} </h3>\n          <p>  <b> Body: </b> {{post.body}} </p>\n      </div>\n    </div>\n        <div class=\"container\">\n        <button @click=\"AddPost\" class=\"center\">Add post</button>\n        <button class=\"center\">Delete all</button>\n      </div>\n\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\nimport auth from \"../auth\";\n\nexport default {\n  name: \"HomeView\",\n  components: {\n  },\n   data: function() {\n    return {\n    posts:[ ],\n    authResult: auth.authenticated()\n    }\n  },\n  methods: {\n    Logout() {\n      fetch(\"http://localhost:3000/auth/logout\", {\n          credentials: 'include', //  Don't forget to specify this if you need cookies\n      })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        console.log('jwt removed');\n        //console.log('jwt removed:' + auth.authenticated());\n        this.$router.push(\"/login\");\n        //location.assign(\"/\");\n      })\n      .catch((e) => {\n        console.log(e);\n        console.log(\"error logout\");\n      });\n    },\n\n    AddPost() { \n        var data = { \n          body1: this.body1, \n        }; \n        // using Fetch - post method - send an HTTP post request to the specified URI with the defined body \n        fetch(\"http://localhost:3000/#/addpost\", { \n          method: \"POST\", \n          headers: { \n            \"Content-Type\": \"application/json\", \n          }, \n            credentials: 'include', //  Don't forget to specify this if you need cookies \n            body: JSON.stringify(data), \n        }) \n        .then((response) => response.json()) \n        .then((data) => { \n        console.log(data); \n        this.$router.push(\"/\"); \n        //location.assign(\"/\"); \n        }) \n        .catch((e) => { \n          console.log(e); \n          console.log(\"error\"); \n        }); \n      },\n  }, \n  mounted() {\n        fetch('https://jsonplaceholder.typicode.com/posts')\n        .then((response) => response.json())\n        .then(data => this.posts = data)\n        .catch(err => console.log(err.message))\n    }\n};\n</script>\n\n<style scoped>\nbody{\n  margin: 20px 40px;\n  font-size: 1.2rem;\n  letter-spacing: 1px;\n  background: #fafafa;\n  position: relative;\n}\n\n.post-list{\n  background: rgba(240, 255, 254, 0.767);\n  margin-bottom: 28px;\n  padding: 15px;\n  border-radius: 15px;\n  margin-left: 200px;\n  margin-right: 200px;\n  margin-top: 10px ;\n}\n\nh3{\n  margin: 0;\n  padding: 0;\n  font-family: 'Quicksand', sans-serif;\n  color: #444;\n  background: #7e9756;\n}\np{\n  background: #796dbd;\n}\nh1, h2, h3, h4, ul, li, a, input, label, button, div, footer{\n  margin: 0;\n  padding: 0;\n  font-family: 'Quicksand', sans-serif;\n  color: #444;\n}\nnav{\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n  margin-bottom: 80px;\n}\ninput{\n  padding: 10px 12px;\n  border-radius: 4px;\n  border: 1px solid #ddd;\n  font-size: 1em;\n  width: 100%;\n}\nlabel{\n  display: block;\n  margin: 20px 0 10px;\n}\n\nbutton {\n  background: rgb(195, 159, 224);\n  padding: 10px 20px;\n  margin-top: 20px;\n  color: white;\n  border-radius: 20px;\n  align-items: center;\n  text-align: center;\n}\nnav{\n  display: flex;\n  align-items: center;\n}\n.post {\n    width: 80%;\n    position: relative;\n    margin: 10px auto;\n    text-align: left;\n}\n.center {\n  margin: auto;\n  border: 0;\n  padding: 10px 20px;\n  margin-top: 20px;\n  margin: 10px auto;\n  width: 30%; \n}\n.container {\n  display: flex;\n  justify-content: center;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}